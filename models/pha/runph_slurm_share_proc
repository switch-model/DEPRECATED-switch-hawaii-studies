#!/bin/bash
#args=("$@")
#nsp=${args[0]}

task_id=$SLURM_PROCID

echo "starting task $task_id on host $(hostname)"

# setup environment for python jobs
source ~/.bash_profile
module load lang/Python/2.7.10/python

await_pyomo_ns ()
{ 
    # wait for a pyro name server to be found successfully at the specified port
    # note: this is needed because dispatch_srvr (and maybe phsolverserver) retry
    # much less aggressively (if at all) when a port is specified. But we must use
    # a custom port to avoid conflicting with other jobs on the same cluster.
    until [[ $(pyro-nsc -p $nsp ping | grep 'NS is at') ]]
    	do
    	   echo "task $task_id: Waiting for pyomo_ns to start at port $nsp..."
           sleep 2
    	done
}

# note: this runs the nameserver and runph in one task, then 
# up to 20 tasks which double as dispatch_srvr and phsolverserver,
# then the rest are simple solver servers
if ((task_id == 0))
then
    pyomo_ns -p $nsp -b $nsp -m &
    await_pyomo_ns
    # use eval instead of $cmd to expand arguments correctly, 
    # even if they are quoted strings with spaces
    eval $runph_cmd
elif ((task_id>=1)) # && task_id<=20))
then
    await_pyomo_ns
    dispatch_srvr -p $nsp --allow-multiple-dispatchers &
    phsolverserver --traceback --pyro-port=$nsp
else    # not used
    await_pyomo_ns
    phsolverserver --traceback --pyro-port=$nsp
fi

