# switch_data.load(
#     filename=os.path.join(inputs_dir, 'all_projects.tab'),
#     select=('PROJECT', 'proj_dbid', 'proj_gen_tech',
#             'proj_load_zone', 'proj_connect_cost_per_mw'),
#     index=mod.PROJECTS,
#     param=(mod.proj_dbid, mod.proj_gen_tech,
#            mod.proj_load_zone, mod.proj_connect_cost_per_mw))
# switch_data.load(
#     filename=os.path.join(inputs_dir, 'existing_projects.tab'),
#     select=('PROJECT', 'build_year', 'proj_existing_cap'),
#     index=mod.EXISTING_PROJ_BUILDYEARS,
#     param=(mod.proj_existing_cap))
switch_data.load(
    filename=os.path.join(inputs_dir, 'cap_limited_projects.tab'),
    select=('PROJECT', 'proj_capacity_limit_mw'),
    index=mod.PROJECTS_CAP_LIMITED,
    param=(mod.proj_capacity_limit_mw))
path = os.path.join(inputs_dir, 'proj_heat_rate.tab')
if os.path.isfile(path):
    switch_data.load(
        filename=path,
        select=('PROJECT', 'full_load_heat_rate'),
        param=(mod.proj_full_load_heat_rate))
path = os.path.join(inputs_dir, 'project_specific_costs.tab')
if os.path.isfile(path):
    switch_data.load(
        filename=path,
        select=('PROJECT', 'build_year',
                'proj_overnight_cost', 'proj_fixed_om'),
        param=(mod.proj_overnight_cost, mod.proj_fixed_om))
        
            




all_projects.tab
cap_limited_projects.tab
existing_projects.tab
financials.dat
fuel_supply_curves.tab
fuels.tab
gen_vintage_costs.tab
generator_energy_sources.tab
generator_info.tab
load_zones.tab
loads.tab
lz_peak_loads.tab
lz_to_regional_fuel_market.tab
non_fuel_energy_sources.tab
periods.tab
proj_variable_costs.tab
project_specific_costs.tab
regional_fuel_markets.tab
thermal_projects.tab
timepoints.tab
timeseries.tab
variable_capacity_factors.tab
